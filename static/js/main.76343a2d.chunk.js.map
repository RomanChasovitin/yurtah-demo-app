{"version":3,"sources":["assets/images/logo.svg","assets/images/oval.svg","actions/types.js","api/index.js","actions/index.js","yup/listing.js","components/FindListing.js","components/Header.js","components/Loader.js","components/ListingItem.js","components/ListingList.js","pages/Home.js","pages/About.js","configs/router.js","App.js","serviceWorker.js","reducers/listing.js","reducers/index.js","index.js"],"names":["module","exports","GET_LISTINGS_REQUEST","GET_LISTINGS_SUCCESS","GET_LISTINGS_URL","getListingRequest","type","getListingsSuccess","listings","payload","Yup","shape","count","max","min","initialValues","connect","dispatch","onGetListings","a","fetch","res","json","results","getListings","className","validationSchema","LISTING_VALIDATION_SCHEMA","onSubmit","errors","touched","values","handleChange","handleBlur","isValid","value","onChange","name","onBlur","disabled","withRouter","location","src","headerLogoIcon","alt","id","href","text","map","itm","to","key","pathname","Loader","loaderIcon","ListingItem","listing","listingImageUrl","objects","find","obj","data","small","jpeg","listingAddress","slug","apartment_number","price","state","isLoading","length","Home","About","Routes","path","exact","component","AboutPage","HomePage","App","Boolean","window","hostname","match","defaultState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76343a2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d12274c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/oval.013b6b87.svg\";","export const GET_LISTINGS_REQUEST = \"GET_LISTINGS_REQUEST\";\nexport const GET_LISTINGS_SUCCESS = \"GET_LISTINGS_SUCCESS\";\nexport const GET_LISTINGS_FAIL = \"GET_LISTINGS_FAIL\";\n","export const GET_LISTINGS_URL = \"https://dev.yurtah.com/api/v1/listings\";\n","import { GET_LISTINGS_REQUEST, GET_LISTINGS_SUCCESS } from \"./types\";\n\nimport { GET_LISTINGS_URL } from \"../api\";\n\nexport const getListingRequest = () => ({\n  type: GET_LISTINGS_REQUEST\n});\n\nexport const getListingsSuccess = listings => ({\n  type: GET_LISTINGS_SUCCESS,\n  payload: listings\n});\n\nexport function getListings(count) {\n  return async function(dispatch) {\n    dispatch(getListingRequest());\n\n    let res = await fetch(`${GET_LISTINGS_URL}?size=${count}`);\n    res = await res.json();\n\n    dispatch(getListingsSuccess(res.results));\n  };\n}\n","import * as Yup from \"yup\";\n\nexport default Yup.object().shape({\n  count: Yup.number()\n    .max(10, \"Maximum 10 Listings\")\n    .min(1, \"Minimum 1 Listing\")\n});\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { connect } from \"react-redux\";\n\nimport { getListings } from \"../actions\";\n\nimport LISTING_VALIDATION_SCHEMA from \"../yup/listing\";\n\nconst initialValues = {\n  count: 0\n};\n\nconst FindListing = ({ onGetListings }) => {\n  const submitForm = ({ count }) => {\n    onGetListings(count);\n  };\n\n  return (\n    <div className=\"find-listing\">\n      <Formik\n        validationSchema={LISTING_VALIDATION_SCHEMA}\n        initialValues={initialValues}\n        onSubmit={submitForm}>\n        {({ errors, touched, values, handleChange, handleBlur, isValid }) => (\n          <Form className=\"find-listing__form\">\n            <input\n              type=\"number\"\n              className=\"find-listing__input\"\n              value={values.count}\n              onChange={handleChange}\n              name=\"count\"\n              onBlur={handleBlur}\n            />\n            {errors.count && touched.count ? (\n              <span className=\"find-listing__error\">{errors.count}</span>\n            ) : null}\n            <button type=\"submit\" className=\"find-listing__button\" disabled={!isValid}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetListings: count => dispatch(getListings(count))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(FindListing);\n","import React from \"react\";\n\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport headerLogoIcon from \"../assets/images/logo.svg\";\n\nimport FindListing from \"./FindListing\";\n\nconst Header = ({ location }) => {\n  const menuItems = [\n    {\n      id: 1,\n      href: \"/\",\n      text: \"Home\"\n    },\n    {\n      id: 2,\n      href: \"/about\",\n      text: \"About Us\"\n    }\n  ];\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__top\">\n        <div className=\"header__logo\">\n          <img src={headerLogoIcon} alt=\"Logo\" />\n        </div>\n        <div className=\"header__menu\">\n          {menuItems.map(itm => (\n            <Link\n              to={itm.href}\n              key={itm.id}\n              className={`header__menu-item ${\n                itm.href === location.pathname ? \"header__menu-item_active\" : \"\"\n              }`}>\n              {itm.text}\n            </Link>\n          ))}\n        </div>\n      </div>\n      <div className=\"header__content\">\n        <div className=\"header__content-message\">Best ever camp for your child</div>\n        <div className=\"header__content-input\">\n          {location.pathname === \"/\" ? <FindListing /> : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\n\nimport loaderIcon from \"../assets/images/oval.svg\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <img className=\"loader__icon\" src={loaderIcon} alt=\"Loading...\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst ListingItem = ({ listing }) => {\n  const listingImageUrl = listing.objects.find(obj => obj.type === \"photo\").data.small.jpeg;\n  const listingAddress = `${listing.slug} #${listing.apartment_number}`;\n  const price = `$ ${listing.price}`;\n  return (\n    <div className=\"listing-item\">\n      <img src={listingImageUrl} alt=\"\" className=\"listing-item__image\" />\n      <span className=\"listing-item__address\">{listingAddress}</span>\n      <span className=\"listing-item__price\">{price}</span>\n    </div>\n  );\n};\n\nexport default ListingItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Loader from \"./Loader\";\nimport ListingItem from \"./ListingItem\";\n\nconst ListingList = ({ isLoading, listings, touched }) => {\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!touched && !listings.length) {\n    return <span>Please, request amount of Listings :)</span>;\n  }\n\n  if (!listings.length && !isLoading) {\n    return <span>Not Found :(</span>;\n  }\n\n  return (\n    <div className=\"listing-list\">\n      {listings.map(listing => (\n        <ListingItem key={listing.id} listing={listing} />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    listings: state.listing.listings,\n    isLoading: state.listing.isLoading,\n    touched: state.listing.touched\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ListingList);\n","import React from \"react\";\n\nimport { ListingList } from '../components';\n\nconst Home = () => {\n  return <div className='page'>\n    <ListingList />\n  </div>;\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"page about-page\">\n      <h2 className=\"about-page__title\">About us</h2>\n      <p className=\"about-page__text\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n        labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n        laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n        voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Fragment } from \"react\";\nimport { Switch, Route as ReactRoute } from \"react-router-dom\";\n\nimport { HomePage, AboutPage } from \"../pages\";\n\nconst Routes = () => (\n  <Fragment>\n    <Switch>\n      <ReactRoute path=\"/about\" exact component={AboutPage} />\n      <ReactRoute path=\"/\" exact component={HomePage} />\n    </Switch>\n  </Fragment>\n);\n\nexport default Routes;\n","import React, { Fragment } from \"react\";\n\n// Router\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Routes\nimport Routes from \"./configs/router\";\n\n// Header\nimport { Header } from \"./components\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Router>\n        <Header />\n        <Routes />\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_LISTINGS_REQUEST, GET_LISTINGS_SUCCESS } from \"../actions/types\";\n\nconst defaultState = {\n  listings: [],\n  isLoading: false,\n  touched: false\n};\n\nexport default function listingReducer(state = defaultState, action) {\n  switch (action.type) {\n    case GET_LISTINGS_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        touched: true\n      };\n\n    case GET_LISTINGS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        listings: [...action.payload]\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport listingReducer from \"./listing\";\n\nexport default combineReducers({\n  listing: listingReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/styles/index.scss\";\n\n// redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\n// main reducer\nimport rootReducer from \"./reducers\";\n\n// store\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}